/* FortuneCookie.css */

.fortune-cookie-container {
    width: 250px;
    height: 100px;
    border-radius: 30px;
    background-color: #ffffff;
    box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.25);
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 16px;
    box-sizing: border-box;
    cursor: pointer;
    transition: transform 0.2s ease-in-out;
    position: relative; /* 내부 요소 위치 기준 */
    overflow: hidden; /* 애니메이션 요소가 밖으로 나가지 않도록 */
}

.fortune-cookie-container:hover {
    transform: translateY(-2px);
}

.fortune-text {
    font-family: 'NPS-Regular', sans-serif;
    font-size: 15px;
    color: #000;
    text-align: center;
    position: relative;
    z-index: 2;
}

.fortune-loading-message {
    font-size: 15px;
    color: #000;
    text-align: center;
}


.fortune-img-container {
    position: absolute;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.bg-cookie-img {
    position: absolute;
    opacity: 0.3;
    z-index: 1;
    max-width: 100px;
    height: auto;
}

.bg-cookie-img.is-cracked {
    width: 200px;
}

/* --- 2. 로그인 후 클릭 가능한 쿠키 스타일 --- */
.cookie-image-wrapper {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
}

.cookie-image-wrapper:hover .cookie-img:not(.animating) {
    transform: scale(1.1); /* 마우스를 올리면 살짝 커지는 효과 */
}

.cookie-img, .cracked-cookie-img {
    /* [수정] 로그인/비로그인 시 크기 일관성을 위해 최대 너비를 100px로 명시
      - 컨테이너보다 이미지가 커지는 것을 방지하면서, 의도한 크기를 유지 가능
       'object-fit: contain' 은 이미지의 비율을 유지하면서 컨테이너 안에
      - 완전히 들어가도록 하여 이미지가 삐져나가는 현상을 방지 */
    max-width: 100px;
    max-height: 100%;
    object-fit: contain;
    vertical-align: middle;
}

/* 쿠키를 여는 중일 때 흔들리는 애니메이션 */
.cookie-image-container.shaking {
    /* 포춘쿠키.jsx 안 onSuccess의 시간과 일치시켜야 한다 */
    animation: shake 2s cubic-bezier(.36,.07,.19,.97);
}

@keyframes shake {
    10%, 90% {
        transform: translate3d(-10px, 0, 0) rotate3d(0, 0, 1, -6deg) scale(1.2);
    }
    20%, 80% {
        transform: translate3d(20px, 0, 0) rotate3d(0, 0, 1, 8deg) scale(0.8);
        opacity: 1;
    }
    30%, 50%, 70% {
        transform: translate3d(-40px, 0, 0) rotate3d(0, 0, 1, -16deg) scale(1.3);
    }
    40%, 60% {
        transform: translate3d(40px, 0, 0) rotate3d(0, 0, 1, 16deg) scale(0.7);
    }
    95% {
        opacity: 1;
        transform: scale(1.8);
    }
    100% {
        /* 애니메이션이 끝날 때 투명해지도록 설정 */
        opacity: 0;
        transform: scale(2);
    }
}